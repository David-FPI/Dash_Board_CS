import streamlit as st
import pandas as pd
import unicodedata
import re
import os

st.set_page_config(page_title="üìÖ ƒê·ªçc T√™n Nh√¢n Vi√™n & T√≠nh KPI", page_icon="üíº")

# =====================
# üîß T·ª± ƒë·ªông c√†i package n·∫øu thi·∫øu
os.system("pip install openpyxl")

# ‚úÖ H√†m chu·∫©n h√≥a vƒÉn b·∫£n ti√™u ƒë·ªÅ
def normalize_text(text):
    if not isinstance(text, str):
        return ""
    text = text.strip().lower()
    text = unicodedata.normalize('NFD', text)
    text = ''.join(ch for ch in text if unicodedata.category(ch) != 'Mn')
    text = re.sub(r'\s+', ' ', text)
    return text

# ‚úÖ Danh s√°ch keyword cho c√°c ch·ªâ s·ªë KPI
KEYWORDS_KET_BAN = [
    "k·∫øt b·∫°n", "t·ªïng s·ªë k·∫øt b·∫°n", "t·ªïng k·∫øt b·∫°n", "s·ªë k·∫øt b·∫°n trong ng√†y",
    "ÂΩìÂ§©Âä†zaloÊÄªÊï∞", "ÂΩìÂ§©Âä†Â•ΩÂèã", "ÂΩìÂ§©Âä† zalo", "Âä†Â•ΩÂèã", "Âä†Â•ΩÂèã‰∫∫Êï∞",
    "ÂΩìÂ§©Âä†Â•ΩÂèãÊï∞", "ÊÄªÂä†Â•ΩÂèã", "add friend", "total add friend",
    "friend request", "friends added", "Áî®Êà∑ÈÇÄËØ∑Âä†Â•ΩÂèã", "ÈÇÄËØ∑Âä†Â•ΩÂèã",
    "zalo add", "Âä†zalo", "zalo s·ªë l∆∞·ª£ng k·∫øt b·∫°n", "s·ªë b·∫°n zalo", "ÈÇÄËØ∑ËøõÁæ§zalo"
]

KEYWORDS_TUONG_TAC = [
    "‚â•10", ">=10", "10 c√¢u", "tuong tac", "s·ªë l∆∞·ª£ng t∆∞∆°ng t√°c",
    "t∆∞∆°ng t√°c 10 c√¢u", "t∆∞∆°ng t√°c", "‰∫íÂä®", "s·ªë c√¢u h·ªèi",
    "t∆∞∆°ng t√°c v·ªõi kh√°ch", "‚â•10Âè•", "‰∫íÂä®Ê¨°Êï∞"
]

KEYWORDS_GROUP_ZALO = [
    "group zalo", "zalo group", "tham gia group", "tham gia zalo",
    "nh√≥m zalo", "zalo nh√≥m", "zalo tham gia", "Âä†zaloÁæ§",
    "Âä†ÂÖ•zaloÁæ§Êï∞Èáè", "v√†o group zalo", "v√†o nh√≥m zalo"
]

# ‚úÖ H√†m d√≤ keyword cho t·ª´ng ch·ªâ s·ªë KPI
def is_ket_ban_column(col):
    normalized = normalize_text(col)
    return any(keyword in normalized for keyword in KEYWORDS_KET_BAN)

def is_tuong_tac_column(col):
    normalized = normalize_text(col)
    return any(keyword in normalized for keyword in KEYWORDS_TUONG_TAC)

def is_group_zalo_column(col):
    normalized = normalize_text(col)
    return any(keyword in normalized for keyword in KEYWORDS_GROUP_ZALO)

# ‚úÖ H√†m d√≤ to√†n b·ªô mapping KPI t·ª´ list c·ªôt
def detect_kpi_columns(columns):
    result = {}
    for col in columns:
        if is_ket_ban_column(col):
            result["T·ªïng s·ªë k·∫øt b·∫°n trong ng√†y"] = col
        elif is_tuong_tac_column(col):
            result["T∆∞∆°ng t√°c ‚â•10 c√¢u"] = col
        elif is_group_zalo_column(col):
            result["L∆∞·ª£ng tham gia group Zalo"] = col
    return result

# ‚úÖ T·∫£i file v√† demo k·∫øt qu·∫£ d√≤ c·ªôt
st.title("üìä D√≤ C·ªôt KPI Theo T·ª´ Kh√≥a")
file = st.file_uploader("üì§ Upload 1 file Excel", type=["xlsx"])
if file:
    xls = pd.ExcelFile(file)
    all_data = []
    for sheet_name in xls.sheet_names:
        df = pd.read_excel(xls, sheet_name=sheet_name, header=None)
        if df.shape[0] < 3:
            continue
        header_row = df.iloc[2].fillna("").astype(str)
        st.write(f"üìù Sheet: {sheet_name}")
        st.write("üéØ Ti√™u ƒë·ªÅ d√≤ng 3:", list(header_row))
        kpi_mapping = detect_kpi_columns(header_row)
        st.write("‚úÖ Mapping c·ªôt KPI:", kpi_mapping)
else:
    st.info("üìé Vui l√≤ng upload file Excel.")
